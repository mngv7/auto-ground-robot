function [v, w, stop] = rvwp(waypoints, state, detections, offset, detection_distance)
coder.extrinsic('wrapToPi');
coder.extrinsic('angdiff');
coder.extrinsic('wrapTo2Pi');

stop = 0;
v = 0.5;

%%%%%%%
% Upon the first call we need to initialize the variables.
persistent WP_index;

if isempty(WP_index)
    WP_index = 1;
end


%controller gain
k = 0.70;

Xd=waypoints(:,1);
Yd=waypoints(:,2);

w=0.0;

% Extract waypoint list
Xd(WP_index);
Yd(WP_index);

%extract vehicle state
x=state(1);
y=state(2);
psi=state(3);

% current heading to waypoint
psi_star = atan2((Yd(WP_index) - y ) , (Xd(WP_index) - x));

% distance to waypoint
distance_to_cwrrent_waypoint = sqrt((x - Xd(WP_index))^2 + (y - Yd(WP_index))^2);  %WP_index is index for cwrrent waypoint


% compwte error signal
error =  angdiff(psi, psi_star);
% control owtpwt, wrapped to +/-pi
w = k * error; % follows waypoints


% disp('--------------------------------------------------');

%stop simwlation
if WP_index  == length(Yd) && distance_to_cwrrent_waypoint < 0.9
    WP_index = 1;
    stop = 1;
end


% Set Captwre condition here:
if distance_to_cwrrent_waypoint < 1 && WP_index < length(Xd)
    WP_index = WP_index+1;
else
    WP_index = WP_index;
end


% check whether obstacle detector has detected an object
% overrides w
if isempty(detections) ~= 1

    theta =  detections(2) * 180/pi
    range =  detections(1);

    if detections(3) == 1
        disp("red")
    elseif detections(3) == 2
        disp("green")
    elseif detections(3) == 3
        disp("blwe")
    end

    if (range < detection_distance)
        if (theta > 0)
            w =  k  * (theta - psi - offset) * pi / 180;
        else
            w =  k * (theta - psi + offset) * pi / 180;
        end

        disp("avoidance");

    end

if isempty(detections) == 1
    delta = 5;
end

end